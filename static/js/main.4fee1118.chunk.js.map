{"version":3,"sources":["utils/api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","fetchImages","imageTags","page","a","get","response","data","hits","Searchbar","onSearch","className","onSubmit","e","preventDefault","target","elements","value","reset","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","largeImageURL","tags","handleSelectedImage","src","alt","onClick","ImageGallery","gallery","map","id","Button","handleLoadMore","modalRoot","document","querySelector","Modal","handleKeydown","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","children","Component","App","state","requestStatus","showModal","handleFormSubmit","setState","prevState","toggleModal","handleScroll","scrollTo","top","documentElement","scrollHeight","behavior","_","length","toast","console","log","isLoading","showGallery","color","height","width","style","marginLeft","marginTop","marginBottom","timeout","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fee1118.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '22610710-77f064d5489dfe1781c9024b3';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n};\n\nconst fetchImages = async (imageTags, page) => {\n  const response = await axios.get(\n    `?q=${imageTags}&orientation=horizontal&safesearch=true&page=${page}&per_page=12`,\n  );\n  return response.data.hits;\n};\n\nexport default fetchImages;\n","import PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nconst Searchbar = ({ onSearch }) => {\n  const onSearchBtnClick = e => {\n    e.preventDefault();\n    onSearch(e.target.elements.imageTags.value);\n    e.target.reset();\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onSearchBtnClick}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          name=\"imageTags\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import './ImageGalleryItem.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  imageTags,\n  tags,\n  handleSelectedImage,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => handleSelectedImage(largeImageURL, imageTags)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  imageTags: PropTypes.string,\n  tags: PropTypes.string,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ gallery, handleSelectedImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {gallery.map(({ id, largeImageURL, webformatURL }) => (\n        <ImageGalleryItem\n          key={id}\n          largeImageURL={largeImageURL}\n          webformatURL={webformatURL}\n          handleSelectedImage={handleSelectedImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  gallery: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({ handleLoadMore }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={handleLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  handleLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { largeImageURL, tags } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          {this.props.children}\n          <img src={largeImageURL} alt={tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport fetchImages from './utils/api';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport { Modal } from './components/Modal/Modal';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    imageTags: '',\n    page: 1,\n    gallery: [],\n    requestStatus: 'idle',\n    showModal: false,\n    largeImageURL: '',\n    tags: '',\n  };\n\n  handleFormSubmit = imageTags => {\n    this.setState({ page: 1, gallery: [], imageTags });\n  };\n\n  handleLoadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleSelectedImage = (largeImageURL, tags) => {\n    this.setState({ largeImageURL, tags });\n    this.toggleModal();\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  async componentDidUpdate(_, prevState) {\n    const { imageTags, page } = this.state;\n\n    if (prevState.imageTags !== imageTags || prevState.page !== page)\n      try {\n        this.setState({ requestStatus: 'pending' });\n        const gallery = await fetchImages(imageTags, page);\n\n        this.setState(\n          prevState => ({\n            gallery: [...prevState.gallery, ...gallery],\n            requestStatus: 'resolved',\n          }),\n          () => {\n            this.handleScroll();\n          },\n        );\n        if (gallery.length === 0) {\n          return toast(\n            'Sorry, there are no images matching your search query. Please try again.',\n          );\n        }\n      } catch (error) {\n        console.log(error);\n      }\n  }\n\n  render() {\n    const { gallery, showModal, largeImageURL, imageTags, requestStatus } =\n      this.state;\n    const isLoading = requestStatus === 'pending';\n    const showGallery = gallery.length > 0 && !isLoading;\n\n    return (\n      <div>\n        {showModal && (\n          <Modal\n            onClose={this.toggleModal}\n            largeImageURL={largeImageURL}\n            alt={imageTags}\n          />\n        )}\n        <Searchbar onSearch={this.handleFormSubmit} />\n        {isLoading && (\n          <Loader\n            type=\"Puff\"\n            color=\"#eb8634\"\n            height={84}\n            width={84}\n            style={{\n              marginLeft: '666px',\n              marginTop: '20px',\n              marginBottom: '20px',\n            }}\n            timeout={2000}\n          />\n        )}\n        <ImageGallery\n          gallery={gallery}\n          handleSelectedImage={this.handleSelectedImage}\n        />\n        {showGallery && <Button handleLoadMore={this.handleLoadMore} />}\n        <Toaster position=\"top-right\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}